// Test generated by RoostGPT for test Camunda-engine-dmn using AI Type Open AI and AI Model gpt-4

package org.camunda.bpm.dmn.engine.impl;

import org.camunda.bpm.dmn.engine.delegate.DmnDecisionEvaluationListener;
import org.junit.Before;
import org.junit.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

import java.util.ArrayList;
import java.util.List;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.mockito.Mockito.when;

public class DefaultDmnEngineConfiguration_initDecisionEvaluationListener_18fa78e60c_Test {

    @Mock
    private List<DmnDecisionEvaluationListener> customPreDecisionEvaluationListeners;

    @Mock
    private List<DmnDecisionEvaluationListener> customPostDecisionEvaluationListeners;

    @InjectMocks
    private DefaultDmnEngineConfiguration defaultDmnEngineConfiguration;

    @Before
    public void setUp() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testInitDecisionEvaluationListener_customPreAndPostListenersNotNull() {
        DmnDecisionEvaluationListener dummyListener = new DmnDecisionEvaluationListener() {
            @Override
            public void notify(DmnDecisionTableEvaluationEvent dmnDecisionTableEvaluationEvent) {
                // TODO: add your custom logic here
            }
        };
        List<DmnDecisionEvaluationListener> dummyListeners = new ArrayList<>();
        dummyListeners.add(dummyListener);

        when(customPreDecisionEvaluationListeners.isEmpty()).thenReturn(false);
        when(customPreDecisionEvaluationListeners).thenReturn(dummyListeners);
        when(customPostDecisionEvaluationListeners.isEmpty()).thenReturn(false);
        when(customPostDecisionEvaluationListeners).thenReturn(dummyListeners);

        defaultDmnEngineConfiguration.initDecisionEvaluationListener();

        assertNotNull(defaultDmnEngineConfiguration.getDecisionEvaluationListeners());
        assertEquals(4, defaultDmnEngineConfiguration.getDecisionEvaluationListeners().size());
    }

    @Test
    public void testInitDecisionEvaluationListener_customPreAndPostListenersNull() {
        when(customPreDecisionEvaluationListeners.isEmpty()).thenReturn(true);
        when(customPostDecisionEvaluationListeners.isEmpty()).thenReturn(true);

        defaultDmnEngineConfiguration.initDecisionEvaluationListener();

        assertNotNull(defaultDmnEngineConfiguration.getDecisionEvaluationListeners());
        assertEquals(2, defaultDmnEngineConfiguration.getDecisionEvaluationListeners().size());
    }
}
