// Test generated by RoostGPT for test Camunda-engine-dmn using AI Type Open AI and AI Model gpt-4

package org.camunda.bpm.dmn.engine.impl;

import static org.junit.Assert.*;
import static org.mockito.Mockito.*;
import org.junit.Test;
import org.junit.Before;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.camunda.bpm.dmn.engine.impl.DefaultDmnDecisionContext;
import org.camunda.bpm.dmn.engine.impl.DefaultDmnEngineConfiguration;
import org.camunda.bpm.dmn.engine.impl.DmnDecisionTableImpl;
import org.camunda.bpm.dmn.engine.impl.DmnDecisionLiteralExpressionImpl;

public class DefaultDmnDecisionContext_DefaultDmnDecisionContext_cd6e5a4093_Test {

    @Mock
    private DefaultDmnEngineConfiguration configuration;

    private DefaultDmnDecisionContext decisionContext;

    @Before
    public void setUp() {
        MockitoAnnotations.openMocks(this);
        when(configuration.getDecisionEvaluationListeners()).thenReturn(new ArrayList<>());
        decisionContext = new DefaultDmnDecisionContext(configuration);
    }

    @Test
    public void testDefaultDmnDecisionContext_ValidConfiguration() {
        assertNotNull(decisionContext);
        assertTrue(decisionContext.getEvaluationHandlers().containsKey(DmnDecisionTableImpl.class));
        assertTrue(decisionContext.getEvaluationHandlers().containsKey(DmnDecisionLiteralExpressionImpl.class));
    }

    @Test(expected = NullPointerException.class)
    public void testDefaultDmnDecisionContext_NullConfiguration() {
        new DefaultDmnDecisionContext(null);
    }
}
