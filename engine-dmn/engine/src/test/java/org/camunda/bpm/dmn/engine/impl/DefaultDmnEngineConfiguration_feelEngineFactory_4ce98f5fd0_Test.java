// Test generated by RoostGPT for test Camunda-engine-dmn using AI Type Open AI and AI Model gpt-4

package org.camunda.bpm.dmn.engine.impl;

import org.camunda.bpm.dmn.feel.impl.FeelEngine;
import org.camunda.bpm.dmn.feel.impl.FeelEngineFactory;
import org.camunda.bpm.dmn.feel.impl.juel.FeelEngineFactoryImpl;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.MockitoJUnitRunner;
import static org.junit.Assert.assertEquals;
import static org.mockito.Mockito.*;

@RunWith(MockitoJUnitRunner.class)
public class DefaultDmnEngineConfiguration_feelEngineFactory_4ce98f5fd0_Test {

    @InjectMocks
    private DefaultDmnEngineConfiguration defaultDmnEngineConfiguration;

    @Mock
    private FeelEngineFactory feelEngineFactory;

    @Test
    public void testFeelEngineFactorySuccess() {
        when(feelEngineFactory.createInstance()).thenReturn(new FeelEngine());

        DefaultDmnEngineConfiguration result = defaultDmnEngineConfiguration.feelEngineFactory(feelEngineFactory);

        assertEquals(defaultDmnEngineConfiguration, result);
        verify(defaultDmnEngineConfiguration, times(1)).setFeelEngineFactory(feelEngineFactory);
    }

    @Test
    public void testFeelEngineFactoryFailure() {
        when(feelEngineFactory.createInstance()).thenReturn(null);

        DefaultDmnEngineConfiguration result = defaultDmnEngineConfiguration.feelEngineFactory(feelEngineFactory);

        assertEquals(defaultDmnEngineConfiguration, result);
        verify(defaultDmnEngineConfiguration, times(1)).setFeelEngineFactory(feelEngineFactory);
    }
}
