// Test generated by RoostGPT for test Camunda-engine-dmn using AI Type Open AI and AI Model gpt-4

package org.camunda.bpm.dmn.engine.impl;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.mockito.junit.MockitoJUnitRunner;
import org.camunda.bpm.dmn.engine.delegate.DmnDecisionEvaluationListener;
import org.camunda.bpm.dmn.engine.impl.metrics.DmnEngineMetricCollectorWrapper;
import org.camunda.bpm.dmn.engine.spi.DmnEngineMetricCollector;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import static org.junit.Assert.assertEquals;
import static org.mockito.Mockito.when;

@RunWith(MockitoJUnitRunner.class)
public class DefaultDmnEngineConfiguration_getDefaultDmnDecisionEvaluationListeners_797fa63b80_Test {

  @Mock
  private DmnEngineMetricCollector engineMetricCollector;

  @Before
  public void setUp() {
    when(engineMetricCollector.toString()).thenReturn("MockMetricCollector");
  }

  @Test
  public void testGetDefaultDmnDecisionEvaluationListeners_MetricCollectorIsListener() {
    DmnDecisionEvaluationListener listener = (DmnDecisionEvaluationListener) engineMetricCollector;
    Collection<? extends DmnDecisionEvaluationListener> defaultListeners = getDefaultDmnDecisionEvaluationListeners();

    assertEquals(1, defaultListeners.size());
    assertEquals(listener, defaultListeners.iterator().next());
  }

  @Test
  public void testGetDefaultDmnDecisionEvaluationListeners_MetricCollectorIsNotListener() {
    Collection<? extends DmnDecisionEvaluationListener> defaultListeners = getDefaultDmnDecisionEvaluationListeners();

    assertEquals(1, defaultListeners.size());
    assertEquals(DmnEngineMetricCollectorWrapper.class, defaultListeners.iterator().next().getClass());
  }

  protected Collection<? extends DmnDecisionEvaluationListener> getDefaultDmnDecisionEvaluationListeners() {
    List<DmnDecisionEvaluationListener> defaultListeners = new ArrayList<>();

    if (engineMetricCollector instanceof DmnDecisionEvaluationListener) {
      defaultListeners.add((DmnDecisionEvaluationListener) engineMetricCollector);
    } else {
      defaultListeners.add(new DmnEngineMetricCollectorWrapper());
    }

    return defaultListeners;
  }
}
