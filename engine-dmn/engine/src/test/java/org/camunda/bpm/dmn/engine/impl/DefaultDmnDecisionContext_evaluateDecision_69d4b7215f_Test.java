// Test generated by RoostGPT for test Camunda-engine-dmn using AI Type Open AI and AI Model gpt-4

package org.camunda.bpm.dmn.engine.impl;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

public class DefaultDmnDecisionContext_evaluateDecision_69d4b7215f_Test {

    @Mock
    DmnDecision decision;

    @Mock
    VariableContext variableContext;

    @Mock
    DmnDecisionLogicEvaluationHandler handler;

    @Mock
    DmnDecisionResult evaluatedResult;

    DefaultDmnDecisionContext defaultDmnDecisionContext;

    @BeforeEach
    public void setup() {
        MockitoAnnotations.initMocks(this);
        defaultDmnDecisionContext = new DefaultDmnDecisionContext();
    }

    @Test
    public void testEvaluateDecision_success() {
        // TODO: set up your mock objects
        when(decision.getKey()).thenReturn("TestKey");
        when(defaultDmnDecisionContext.getDecisionEvaluationHandler(decision)).thenReturn(handler);
        when(handler.evaluate(any(), any())).thenReturn(new DmnDecisionLogicEvaluationEventImpl());
        when(handler.generateDecisionResult(any())).thenReturn(evaluatedResult);

        DmnDecisionResult result = defaultDmnDecisionContext.evaluateDecision(decision, variableContext);

        assertEquals(evaluatedResult, result);
    }

    @Test
    public void testEvaluateDecision_failure() {
        // TODO: set up your mock objects
        when(decision.getKey()).thenReturn(null);

        assertThrows(Exception.class, () -> {
            defaultDmnDecisionContext.evaluateDecision(decision, variableContext);
        });
    }
}
