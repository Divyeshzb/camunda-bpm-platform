// Test generated by RoostGPT for test Camunda-engine-dmn using AI Type Open AI and AI Model gpt-4

package org.camunda.bpm.dmn.engine.impl;

import org.camunda.bpm.engine.variable.context.VariableContext;
import org.camunda.bpm.dmn.engine.DmnDecision;
import org.camunda.bpm.dmn.engine.DmnDecisionResult;
import org.camunda.bpm.engine.variable.Variables;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
public class DefaultDmnDecisionContext_evaluateDecision_69d4b7215f_Test {

    @Mock
    private DmnDecision decision;
    @Mock
    private VariableContext variableContext;

    private DefaultDmnDecisionContext defaultDmnDecisionContext;

    @BeforeEach
    public void setUp() {
        defaultDmnDecisionContext = new DefaultDmnDecisionContext();
    }

    @Test
    public void testEvaluateDecision_Success() {
        when(decision.getKey()).thenReturn("decision_key");
        DmnDecisionResult result = defaultDmnDecisionContext.evaluateDecision(decision, variableContext);
        assertNotNull(result);
    }

    @Test
    public void testEvaluateDecision_Failure() {
        when(decision.getKey()).thenReturn(null);
        assertThrows(IllegalArgumentException.class, () -> defaultDmnDecisionContext.evaluateDecision(decision, variableContext));
    }
}
