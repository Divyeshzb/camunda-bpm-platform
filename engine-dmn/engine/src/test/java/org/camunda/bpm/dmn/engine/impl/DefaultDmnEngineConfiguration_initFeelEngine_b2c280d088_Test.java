// Test generated by RoostGPT for test Camunda-engine-dmn using AI Type Open AI and AI Model gpt-4

package org.camunda.bpm.dmn.engine.impl;

import org.camunda.bpm.dmn.feel.impl.FeelEngine;
import org.camunda.bpm.dmn.feel.impl.FeelEngineFactory;
import org.camunda.bpm.dmn.feel.impl.juel.FeelEngineFactoryImpl;
import org.camunda.bpm.dmn.feel.impl.scala.ScalaFeelEngineFactory;
import org.camunda.bpm.dmn.feel.impl.scala.function.FeelCustomFunctionProvider;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

import java.util.ArrayList;
import java.util.List;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.mockito.Mockito.*;

public class DefaultDmnEngineConfiguration_initFeelEngine_b2c280d088_Test {

    @Mock
    private ScalaFeelEngineFactory scalaFeelEngineFactory;
    @Mock
    private FeelEngineFactoryImpl feelEngineFactoryImpl;
    @Mock
    private FeelEngine feelEngine;
    @Mock
    private FeelCustomFunctionProvider feelCustomFunctionProvider;

    private DefaultDmnEngineConfiguration defaultDmnEngineConfiguration;

    @BeforeEach
    public void setup() {
        MockitoAnnotations.initMocks(this);
        defaultDmnEngineConfiguration = spy(new DefaultDmnEngineConfiguration());

        when(scalaFeelEngineFactory.createInstance()).thenReturn(feelEngine);
        when(feelEngineFactoryImpl.createInstance()).thenReturn(feelEngine);

        List<FeelCustomFunctionProvider> feelCustomFunctionProviders = new ArrayList<>();
        feelCustomFunctionProviders.add(feelCustomFunctionProvider);
        defaultDmnEngineConfiguration.setFeelCustomFunctionProviders(feelCustomFunctionProviders);
    }

    @Test
    public void testInitFeelEngineWithScalaFeelEngineFactory() {
        defaultDmnEngineConfiguration.setEnableFeelLegacyBehavior(false);
        defaultDmnEngineConfiguration.setFeelEngineFactory(scalaFeelEngineFactory);

        defaultDmnEngineConfiguration.initFeelEngine();

        verify(scalaFeelEngineFactory, times(1)).createInstance();
        assertNotNull(defaultDmnEngineConfiguration.getFeelEngine());
    }

    @Test
    public void testInitFeelEngineWithFeelEngineFactoryImpl() {
        defaultDmnEngineConfiguration.setEnableFeelLegacyBehavior(true);
        defaultDmnEngineConfiguration.setFeelEngineFactory(feelEngineFactoryImpl);

        defaultDmnEngineConfiguration.initFeelEngine();

        verify(feelEngineFactoryImpl, times(1)).createInstance();
        assertNotNull(defaultDmnEngineConfiguration.getFeelEngine());
    }
}
