// Test generated by RoostGPT for test Camunda-engine-dmn using AI Type Open AI and AI Model gpt-4

package org.camunda.bpm.dmn.engine.impl;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.when;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

public class DefaultDmnEngineConfiguration_initElDefaults_d2ddd42974_Test {

    @InjectMocks
    private DefaultDmnEngineConfiguration defaultDmnEngineConfiguration;

    @BeforeEach
    public void setUp() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testInitElDefaults_WithEnableFeelLegacyBehavior() {
        defaultDmnEngineConfiguration.enableFeelLegacyBehavior = true;

        defaultDmnEngineConfiguration.initElDefaults();

        assertEquals(defaultDmnEngineConfiguration.JUEL_EXPRESSION_LANGUAGE, defaultDmnEngineConfiguration.defaultInputExpressionExpressionLanguage);
        assertEquals(defaultDmnEngineConfiguration.FEEL_EXPRESSION_LANGUAGE, defaultDmnEngineConfiguration.defaultInputEntryExpressionLanguage);
        assertEquals(defaultDmnEngineConfiguration.JUEL_EXPRESSION_LANGUAGE, defaultDmnEngineConfiguration.defaultOutputEntryExpressionLanguage);
        assertEquals(defaultDmnEngineConfiguration.JUEL_EXPRESSION_LANGUAGE, defaultDmnEngineConfiguration.defaultLiteralExpressionLanguage);
    }

    @Test
    public void testInitElDefaults_WithoutEnableFeelLegacyBehavior() {
        defaultDmnEngineConfiguration.enableFeelLegacyBehavior = false;

        defaultDmnEngineConfiguration.initElDefaults();

        assertEquals(defaultDmnEngineConfiguration.FEEL_EXPRESSION_LANGUAGE, defaultDmnEngineConfiguration.defaultInputExpressionExpressionLanguage);
        assertEquals(defaultDmnEngineConfiguration.FEEL_EXPRESSION_LANGUAGE, defaultDmnEngineConfiguration.defaultInputEntryExpressionLanguage);
        assertEquals(defaultDmnEngineConfiguration.FEEL_EXPRESSION_LANGUAGE, defaultDmnEngineConfiguration.defaultOutputEntryExpressionLanguage);
        assertEquals(defaultDmnEngineConfiguration.FEEL_EXPRESSION_LANGUAGE, defaultDmnEngineConfiguration.defaultLiteralExpressionLanguage);
    }
}
