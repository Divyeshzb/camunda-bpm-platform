// Test generated by RoostGPT for test Camunda-engine-dmn using AI Type Open AI and AI Model gpt-4

package org.camunda.bpm.dmn.engine.impl;

import java.util.ArrayList;
import java.util.List;
import org.camunda.bpm.dmn.feel.impl.scala.function.FeelCustomFunctionProvider;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mockito;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringRunner;
import static org.junit.Assert.assertEquals;
import static org.mockito.Mockito.when;

@RunWith(SpringRunner.class)
@SpringBootTest
public class DefaultDmnEngineConfiguration_getFeelCustomFunctionProviders_29ee054ed0_Test {

    private DefaultDmnEngineConfiguration configuration;
    private FeelCustomFunctionProvider functionProvider1;
    private FeelCustomFunctionProvider functionProvider2;

    @Before
    public void setUp() {
        configuration = Mockito.mock(DefaultDmnEngineConfiguration.class);
        functionProvider1 = Mockito.mock(FeelCustomFunctionProvider.class);
        functionProvider2 = Mockito.mock(FeelCustomFunctionProvider.class);

        List<FeelCustomFunctionProvider> functionProviders = new ArrayList<>();
        functionProviders.add(functionProvider1);
        functionProviders.add(functionProvider2);

        when(configuration.getFeelCustomFunctionProviders()).thenReturn(functionProviders);
    }

    @Test
    public void testGetFeelCustomFunctionProviders_ReturnsCorrectListSize() {
        assertEquals(2, configuration.getFeelCustomFunctionProviders().size());
    }

    @Test
    public void testGetFeelCustomFunctionProviders_ReturnsCorrectElements() {
        assertEquals(functionProvider1, configuration.getFeelCustomFunctionProviders().get(0));
        assertEquals(functionProvider2, configuration.getFeelCustomFunctionProviders().get(1));
    }
}
