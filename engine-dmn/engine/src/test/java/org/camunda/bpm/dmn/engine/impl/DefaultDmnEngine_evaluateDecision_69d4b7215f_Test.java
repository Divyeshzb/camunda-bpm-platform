// Test generated by RoostGPT for test Camunda-engine-dmn using AI Type Open AI and AI Model gpt-4

package org.camunda.bpm.dmn.engine.impl;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

import org.camunda.bpm.dmn.engine.DmnDecision;
import org.camunda.bpm.dmn.engine.DmnDecisionResult;
import org.camunda.bpm.engine.variable.context.VariableContext;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

public class DefaultDmnEngine_evaluateDecision_69d4b7215f_Test {

    @Mock
    private DmnDecision decision;

    @Mock
    private VariableContext variableContext;

    @Mock
    private DmnDecisionImpl decisionImpl;

    @Mock
    private DefaultDmnDecisionContext decisionContext;

    private DefaultDmnEngine defaultDmnEngine;

    @BeforeEach
    public void setUp() {
        MockitoAnnotations.initMocks(this);
        defaultDmnEngine = new DefaultDmnEngine();
        when(decisionContext.evaluateDecision(decision, variableContext)).thenReturn(mock(DmnDecisionResult.class));
    }

    @Test
    public void testEvaluateDecision_WithValidDecisionAndVariableContext() {
        when(decision instanceof DmnDecisionImpl).thenReturn(true);
        assertNotNull(defaultDmnEngine.evaluateDecision(decision, variableContext));
    }

    @Test
    public void testEvaluateDecision_WithInvalidDecisionType() {
        when(decision instanceof DmnDecisionImpl).thenReturn(false);
        assertThrows(IllegalArgumentException.class, () -> {
            defaultDmnEngine.evaluateDecision(decision, variableContext);
        });
    }
}
