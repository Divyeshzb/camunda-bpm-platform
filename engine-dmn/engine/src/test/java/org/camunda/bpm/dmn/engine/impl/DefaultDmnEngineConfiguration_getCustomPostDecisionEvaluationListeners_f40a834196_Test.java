// Test generated by RoostGPT for test Camunda-engine-dmn using AI Type Open AI and AI Model gpt-4

package org.camunda.bpm.dmn.engine.impl;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.MockitoAnnotations;

import java.util.ArrayList;
import java.util.List;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;

public class DefaultDmnEngineConfiguration_getCustomPostDecisionEvaluationListeners_f40a834196_Test {
    
    @InjectMocks
    DefaultDmnEngineConfiguration defaultDmnEngineConfiguration;

    @BeforeEach
    public void setUp() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testGetCustomPostDecisionEvaluationListeners_whenListenersArePresent() {
        List<DmnDecisionEvaluationListener> listeners = new ArrayList<>();
        DmnDecisionEvaluationListener listener = new DmnDecisionEvaluationListener() {
            @Override
            public void notify(DmnDecisionTableEvaluationEvent event) {
                // TODO: Add your implementation here
            }
        };
        listeners.add(listener);
        defaultDmnEngineConfiguration.setCustomPostDecisionEvaluationListeners(listeners);

        List<DmnDecisionEvaluationListener> result = defaultDmnEngineConfiguration.getCustomPostDecisionEvaluationListeners();

        assertEquals(listeners, result, "Expected and actual listeners should be same");
    }

    @Test
    public void testGetCustomPostDecisionEvaluationListeners_whenNoListenersArePresent() {
        List<DmnDecisionEvaluationListener> result = defaultDmnEngineConfiguration.getCustomPostDecisionEvaluationListeners();

        assertTrue(result.isEmpty(), "Result should be empty when no listeners are present");
    }
}
