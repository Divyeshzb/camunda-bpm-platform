// Test generated by RoostGPT for test Camunda-engine-dmn using AI Type Open AI and AI Model gpt-4

package org.camunda.bpm.dmn.engine.impl;

import org.camunda.bpm.dmn.engine.impl.metrics.DefaultEngineMetricCollector;
import org.camunda.bpm.dmn.engine.impl.metrics.DmnEngineMetricCollectorWrapper;
import org.camunda.bpm.dmn.engine.spi.DmnEngineMetricCollector;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mockito;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;

public class DefaultDmnEngineConfiguration_engineMetricCollector_e1d90ecaa2_Test {

    private DefaultDmnEngineConfiguration defaultDmnEngineConfiguration;

    @BeforeEach
    public void setup() {
        defaultDmnEngineConfiguration = new DefaultDmnEngineConfiguration();
    }

    @Test
    public void testEngineMetricCollectorWithValidInput() {
        DmnEngineMetricCollector collector = new DefaultEngineMetricCollector();
        DefaultDmnEngineConfiguration result = defaultDmnEngineConfiguration.engineMetricCollector(collector);
        assertEquals(defaultDmnEngineConfiguration, result, "The method did not return the expected result.");
    }

    @Test
    public void testEngineMetricCollectorWithNullInput() {
        assertThrows(NullPointerException.class, () -> defaultDmnEngineConfiguration.engineMetricCollector(null), 
        "The method did not throw an exception when a null value was passed.");
    }

    @Test
    public void testEngineMetricCollectorWithMockedInput() {
        DmnEngineMetricCollector collector = Mockito.mock(DmnEngineMetricCollector.class);
        DefaultDmnEngineConfiguration result = defaultDmnEngineConfiguration.engineMetricCollector(collector);
        assertEquals(defaultDmnEngineConfiguration, result, "The method did not return the expected result.");
    }

    @Test
    public void testEngineMetricCollectorWithWrappedInput() {
        DmnEngineMetricCollector collector = new DmnEngineMetricCollectorWrapper(new DefaultEngineMetricCollector());
        DefaultDmnEngineConfiguration result = defaultDmnEngineConfiguration.engineMetricCollector(collector);
        assertEquals(defaultDmnEngineConfiguration, result, "The method did not return the expected result.");
    }

}
