// Test generated by RoostGPT for test Camunda-engine-dmn using AI Type Open AI and AI Model gpt-4

package org.camunda.bpm.dmn.engine.impl;

import org.camunda.bpm.dmn.engine.delegate.DmnDecisionEvaluationListener;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mockito;
import org.springframework.boot.test.context.SpringBootTest;

import java.util.ArrayList;
import java.util.List;

@SpringBootTest
public class DefaultDmnEngineConfiguration_getCustomPreDecisionEvaluationListeners_1062b91067_Test {

    private DefaultDmnEngineConfiguration defaultDmnEngineConfiguration;
    private List<DmnDecisionEvaluationListener> customPreDecisionEvaluationListeners;

    @BeforeEach
    public void setup() {
        defaultDmnEngineConfiguration = Mockito.mock(DefaultDmnEngineConfiguration.class);
        customPreDecisionEvaluationListeners = new ArrayList<>();
        customPreDecisionEvaluationListeners.add(Mockito.mock(DmnDecisionEvaluationListener.class));
        customPreDecisionEvaluationListeners.add(Mockito.mock(DmnDecisionEvaluationListener.class));
        Mockito.when(defaultDmnEngineConfiguration.getCustomPreDecisionEvaluationListeners()).thenReturn(customPreDecisionEvaluationListeners);
    }

    @Test
    public void testGetCustomPreDecisionEvaluationListeners_success() {
        List<DmnDecisionEvaluationListener> result = defaultDmnEngineConfiguration.getCustomPreDecisionEvaluationListeners();
        Assertions.assertNotNull(result);
        Assertions.assertEquals(customPreDecisionEvaluationListeners, result);
    }

    @Test
    public void testGetCustomPreDecisionEvaluationListeners_noListeners() {
        Mockito.when(defaultDmnEngineConfiguration.getCustomPreDecisionEvaluationListeners()).thenReturn(new ArrayList<>());
        List<DmnDecisionEvaluationListener> result = defaultDmnEngineConfiguration.getCustomPreDecisionEvaluationListeners();
        Assertions.assertNotNull(result);
        Assertions.assertTrue(result.isEmpty());
    }
}
