// Test generated by RoostGPT for test Camunda-engine-dmn using AI Type Open AI and AI Model gpt-4

package org.camunda.bpm.dmn.engine.impl;

import static org.junit.Assert.assertEquals;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

import java.io.InputStream;
import java.util.HashMap;
import java.util.Map;

import org.camunda.bpm.dmn.engine.DmnDecisionResult;
import org.camunda.bpm.engine.variable.Variables;
import org.junit.Before;
import org.junit.Test;

public class DefaultDmnEngine_evaluateDecision_1d50e95531_Test {

    private DefaultDmnEngine testInstance;
    private InputStream mockInputStream;
    private Map<String, Object> testVariables;

    @Before
    public void setUp() {
        testInstance = new DefaultDmnEngine();
        mockInputStream = mock(InputStream.class);
        testVariables = new HashMap<>();
    }

    @Test
    public void testEvaluateDecision_Success() {
        String decisionKey = "testDecisionKey";
        DmnDecisionResult expectedResult = mock(DmnDecisionResult.class);

        when(testInstance.evaluateDecision(decisionKey, mockInputStream, Variables.fromMap(testVariables).asVariableContext())).thenReturn(expectedResult);

        DmnDecisionResult actualResult = testInstance.evaluateDecision(decisionKey, mockInputStream, testVariables);

        assertEquals(expectedResult, actualResult);
    }

    @Test(expected = IllegalArgumentException.class)
    public void testEvaluateDecision_NullVariables() {
        String decisionKey = "testDecisionKey";
        testInstance.evaluateDecision(decisionKey, mockInputStream, null);
    }
}
