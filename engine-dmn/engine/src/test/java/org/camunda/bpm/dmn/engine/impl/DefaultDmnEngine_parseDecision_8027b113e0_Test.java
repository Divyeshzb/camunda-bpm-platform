// Test generated by RoostGPT for test Camunda-engine-dmn using AI Type Open AI and AI Model gpt-4

package org.camunda.bpm.dmn.engine.impl;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

import java.util.Arrays;
import java.util.List;

import org.camunda.bpm.dmn.engine.DmnDecision;
import org.camunda.bpm.dmn.engine.DmnEngineException;
import org.camunda.bpm.model.dmn.DmnModelInstance;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

public class DefaultDmnEngine_parseDecision_8027b113e0_Test {

    private DefaultDmnEngine defaultDmnEngine;

    @BeforeEach
    public void setUp() {
        defaultDmnEngine = new DefaultDmnEngine();
    }

    @Test
    public void testParseDecision_Success() {
        DmnModelInstance dmnModelInstance = mock(DmnModelInstance.class);
        DmnDecision decision1 = mock(DmnDecision.class);
        DmnDecision decision2 = mock(DmnDecision.class);

        when(decision1.getKey()).thenReturn("key1");
        when(decision2.getKey()).thenReturn("key2");

        List<DmnDecision> decisions = Arrays.asList(decision1, decision2);
        when(defaultDmnEngine.parseDecisions(dmnModelInstance)).thenReturn(decisions);

        DmnDecision result = defaultDmnEngine.parseDecision("key2", dmnModelInstance);

        assertEquals(decision2, result);
    }

    @Test
    public void testParseDecision_Failure() {
        DmnModelInstance dmnModelInstance = mock(DmnModelInstance.class);
        DmnDecision decision1 = mock(DmnDecision.class);

        when(decision1.getKey()).thenReturn("key1");

        List<DmnDecision> decisions = Arrays.asList(decision1);
        when(defaultDmnEngine.parseDecisions(dmnModelInstance)).thenReturn(decisions);

        assertThrows(DmnEngineException.class, () -> {
            defaultDmnEngine.parseDecision("key2", dmnModelInstance);
        });
    }
}
