// Test generated by RoostGPT for test Camunda-engine-dmn using AI Type Open AI and AI Model gpt-4

package org.camunda.bpm.dmn.engine.impl;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.fail;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

import java.util.Arrays;

import org.camunda.bpm.dmn.engine.DmnDecision;
import org.camunda.bpm.model.dmn.DmnModelInstance;
import org.junit.Before;
import org.junit.Test;

public class DefaultDmnEngine_parseDecision_8027b113e0_Test {
  private DefaultDmnEngine dmnEngine;
  private DmnModelInstance dmnModelInstance;
  
  @Before
  public void setUp() {
    dmnEngine = new DefaultDmnEngine();
    dmnModelInstance = mock(DmnModelInstance.class);
  }
  
  @Test
  public void testParseDecision_Success() {
    DmnDecision mockDecision = mock(DmnDecision.class);
    when(mockDecision.getKey()).thenReturn("decision1");
    when(dmnEngine.parseDecisions(dmnModelInstance)).thenReturn(Arrays.asList(mockDecision));

    DmnDecision result = dmnEngine.parseDecision("decision1", dmnModelInstance);

    assertNotNull(result);
    assertEquals("decision1", result.getKey());
  }
  
  @Test
  public void testParseDecision_DecisionNotFound() {
    DmnDecision mockDecision = mock(DmnDecision.class);
    when(mockDecision.getKey()).thenReturn("decision1");
    when(dmnEngine.parseDecisions(dmnModelInstance)).thenReturn(Arrays.asList(mockDecision));

    try {
      dmnEngine.parseDecision("decision2", dmnModelInstance);
      fail("Expected an Exception to be thrown");
    } catch (Exception e) {
      assertEquals("Unable to find decision with key: decision2", e.getMessage());
    }
  }
}
