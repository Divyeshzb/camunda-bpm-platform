// Test generated by RoostGPT for test Camunda-engine-dmn using AI Type Open AI and AI Model gpt-4

package org.camunda.bpm.dmn.engine.impl;

import org.camunda.bpm.dmn.engine.delegate.DmnDecisionTableEvaluationListener;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.MockitoAnnotations;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringRunner;

import java.util.ArrayList;
import java.util.List;
import java.util.Collections;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

@RunWith(SpringRunner.class)
@SpringBootTest
public class DefaultDmnEngineConfiguration_getCustomPreDecisionTableEvaluationListeners_86e1ab94b4_Test {

    @InjectMocks
    DefaultDmnEngineConfiguration defaultDmnEngineConfiguration;

    @Before
    public void setUp() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testGetCustomPreDecisionTableEvaluationListeners_whenListIsNotEmpty() {
        // TODO: setup your mock data
        List<DmnDecisionTableEvaluationListener> mockListeners = new ArrayList<>();
        mockListeners.add(new DmnDecisionTableEvaluationListener());
        defaultDmnEngineConfiguration.setCustomPreDecisionTableEvaluationListeners(mockListeners);

        List<DmnDecisionTableEvaluationListener> result = defaultDmnEngineConfiguration.getCustomPreDecisionTableEvaluationListeners();

        assertNotNull(result);
        assertEquals(mockListeners, result);
    }

    @Test
    public void testGetCustomPreDecisionTableEvaluationListeners_whenListIsEmpty() {
        // TODO: setup your mock data
        defaultDmnEngineConfiguration.setCustomPreDecisionTableEvaluationListeners(Collections.emptyList());

        List<DmnDecisionTableEvaluationListener> result = defaultDmnEngineConfiguration.getCustomPreDecisionTableEvaluationListeners();

        assertNotNull(result);
        assertEquals(0, result.size());
    }
}
