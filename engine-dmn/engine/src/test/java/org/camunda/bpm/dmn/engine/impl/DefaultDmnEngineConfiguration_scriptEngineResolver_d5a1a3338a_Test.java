// Test generated by RoostGPT for test Camunda-engine-dmn using AI Type Open AI and AI Model gpt-4

package org.camunda.bpm.dmn.engine.impl;

import org.camunda.bpm.dmn.engine.impl.spi.el.DmnScriptEngineResolver;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.mockito.junit.MockitoJUnitRunner;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotEquals;
import static org.junit.Assert.assertNull;
import static org.mockito.Mockito.when;

@RunWith(MockitoJUnitRunner.class)
public class DefaultDmnEngineConfiguration_scriptEngineResolver_d5a1a3338a_Test {

    @Mock
    private DmnScriptEngineResolver scriptEngineResolverMock;

    @Test
    public void testScriptEngineResolver_Success() {
        DefaultDmnEngineConfiguration defaultDmnEngineConfiguration = new DefaultDmnEngineConfiguration();
        defaultDmnEngineConfiguration.scriptEngineResolver(scriptEngineResolverMock);
        assertEquals(scriptEngineResolverMock, defaultDmnEngineConfiguration.getScriptEngineResolver());
    }

    @Test
    public void testScriptEngineResolver_Failure() {
        DefaultDmnEngineConfiguration defaultDmnEngineConfiguration = new DefaultDmnEngineConfiguration();
        defaultDmnEngineConfiguration.scriptEngineResolver(null);
        assertNull(defaultDmnEngineConfiguration.getScriptEngineResolver());
    }

    @Test
    public void testScriptEngineResolver_EdgeCase() {
        DefaultDmnEngineConfiguration defaultDmnEngineConfiguration = new DefaultDmnEngineConfiguration();
        defaultDmnEngineConfiguration.scriptEngineResolver(scriptEngineResolverMock);
        assertNotEquals(new Object(), defaultDmnEngineConfiguration.getScriptEngineResolver());
    }
}
