import java.io.File;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.DocumentBuilder;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

public class Main {
    public static void main(String[] args) {
        try {
            File inputFile = new File("pom.xml");
            DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
            DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
            Document doc = dBuilder.parse(inputFile);
            doc.getDocumentElement().normalize();
            NodeList nList = doc.getElementsByTagName("dependency");

            for (int temp = 0; temp < nList.getLength(); temp++) {
                Node nNode = nList.item(temp);

                if (nNode.getNodeType() == Node.ELEMENT_NODE) {
                    Element eElement = (Element) nNode;
                    String groupId = eElement.getElementsByTagName("groupId").item(0).getTextContent();
                    String artifactId = eElement.getElementsByTagName("artifactId").item(0).getTextContent();
                    String version = eElement.getElementsByTagName("version").item(0).getTextContent();

                    if (groupId.contains("missing") || artifactId.contains("missing") || version.contains("missing")) {
                        System.out.println("Missing dependency found: ");
                        System.out.println("GroupId : " + groupId);
                        System.out.println("ArtifactId : " + artifactId);
                        System.out.println("Version : " + version);
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
