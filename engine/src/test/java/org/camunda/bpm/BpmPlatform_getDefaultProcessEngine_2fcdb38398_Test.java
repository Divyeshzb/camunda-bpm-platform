// Test generated by RoostGPT for test camunda-engine-unit using AI Type Open AI and AI Model gpt-4

package org.camunda.bpm;

import org.camunda.bpm.container.RuntimeContainerDelegate;
import org.camunda.bpm.engine.ProcessEngine;
import org.camunda.bpm.engine.ProcessEngineService;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mockito;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.when;

public class BpmPlatform_getDefaultProcessEngine_2fcdb38398_Test {

    private RuntimeContainerDelegate delegate;
    private ProcessEngineService processEngineService;
    private ProcessEngine expectedProcessEngine;

    @BeforeEach
    public void setUp() {
        delegate = Mockito.mock(RuntimeContainerDelegate.class);
        processEngineService = Mockito.mock(ProcessEngineService.class);
        expectedProcessEngine = Mockito.mock(ProcessEngine.class);

        when(delegate.getProcessEngineService()).thenReturn(processEngineService);
        when(processEngineService.getDefaultProcessEngine()).thenReturn(expectedProcessEngine);
    }

    @Test
    public void testGetDefaultProcessEngine_Success() {
        ProcessEngine actualProcessEngine = delegate.getProcessEngineService().getDefaultProcessEngine();
        assertEquals(expectedProcessEngine, actualProcessEngine);
    }

    @Test
    public void testGetDefaultProcessEngine_Null() {
        when(processEngineService.getDefaultProcessEngine()).thenReturn(null);
        ProcessEngine actualProcessEngine = delegate.getProcessEngineService().getDefaultProcessEngine();
        assertEquals(null, actualProcessEngine);
    }
}
