// Test generated by RoostGPT for test camuda-engine-test using AI Type Open AI and AI Model gpt-4

package org.camunda.bpm.engine.rest.hal;

import org.camunda.bpm.engine.rest.dto.VariableValueDto;
import org.camunda.bpm.engine.rest.exception.RestException;
import org.camunda.bpm.engine.rest.sub.VariableResource;
import org.camunda.bpm.engine.runtime.VariableInstance;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
public class HalVariableValue_link_3d3f3e1e30_Test {

    @Mock
    private HalRelation relation;

    @Mock
    private HalLinker linker;

    private HalVariableValue halVariableValue;

    @BeforeEach
    public void setUp() {
        halVariableValue = new HalVariableValue(linker, "test");
    }

    @Test
    public void testLinkWithLeadingSlash() {
        halVariableValue.link(relation, "/resourcePath", "resourceId", "variablesPath");
        verify(linker, times(1)).createLink(relation, "resourcePath", "resourceId", "variablesPath", "test");
    }

    @Test
    public void testLinkWithoutLeadingSlash() {
        halVariableValue.link(relation, "resourcePath", "resourceId", "variablesPath");
        verify(linker, times(1)).createLink(relation, "resourcePath", "resourceId", "variablesPath", "test");
    }
}
