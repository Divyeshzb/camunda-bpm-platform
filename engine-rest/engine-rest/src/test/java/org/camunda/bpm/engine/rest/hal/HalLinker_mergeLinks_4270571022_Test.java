// Test generated by RoostGPT for test camuda-engine-test using AI Type Open AI and AI Model gpt-4

package org.camunda.bpm.engine.rest.hal;

import org.camunda.bpm.engine.ProcessEngine;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

import java.util.*;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.when;

public class HalLinker_mergeLinks_4270571022_Test {

    @Mock
    private HalResource<?> mockHalResource;

    @Mock
    private HalLinker mockHalLinker;

    private Map<HalRelation, Set<String>> linkedResources;

    @BeforeEach
    public void setUp() {
        MockitoAnnotations.initMocks(this);
        linkedResources = new HashMap<>();
    }

    @Test
    public void testMergeLinks_WhenLinkedIdSetIsNotNull() {
        HalRelation halRelation = new HalRelation();
        Set<String> linkedIdSet = new HashSet<>(Arrays.asList("link1", "link2"));
        linkedResources.put(halRelation, linkedIdSet);

        when(mockHalResource.linker).thenReturn(mockHalLinker);
        when(mockHalLinker.linkedResources).thenReturn(linkedResources);

        mergeLinks(mockHalResource);

        assertEquals(2, linkedResources.get(halRelation).size());
        assertEquals(linkedIdSet, linkedResources.get(halRelation));
    }

    @Test
    public void testMergeLinks_WhenLinkedIdSetIsNull() {
        HalRelation halRelation = new HalRelation();
        Set<String> linkedIdSet = new HashSet<>(Arrays.asList("link3", "link4"));

        when(mockHalResource.linker).thenReturn(mockHalLinker);
        when(mockHalLinker.linkedResources).thenReturn(Collections.singletonMap(halRelation, linkedIdSet));

        mergeLinks(mockHalResource);

        assertEquals(2, linkedResources.get(halRelation).size());
        assertEquals(linkedIdSet, linkedResources.get(halRelation));
    }

    public void mergeLinks(HalResource<?> embedded) {
        for (Map.Entry<HalRelation, Set<String>> linkentry : embedded.linker.linkedResources.entrySet()) {
            Set<String> linkedIdSet = linkedResources.get(linkentry.getKey());
            if (linkedIdSet != null) {
                linkedIdSet.addAll(linkentry.getValue());
            } else {
                linkedResources.put(linkentry.getKey(), linkentry.getValue());
            }
        }
    }
}
