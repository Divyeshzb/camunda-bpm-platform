// Test generated by RoostGPT for test camunda-new using AI Type Open AI and AI Model gpt-4

package org.camunda.bpm.engine.rest.hal.cache;

import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mockito;
import static org.junit.jupiter.api.Assertions.*;

public class HalRelationCacheConfiguration_setCacheConfigurations_8714a33808_Test {

    private HalRelationCacheConfiguration halRelationCacheConfiguration;

    @BeforeEach
    public void setup() {
        halRelationCacheConfiguration = new HalRelationCacheConfiguration();
    }

    @Test
    public void testSetCacheConfigurations_ValidInput() {
        Map<Class<?>, Map<String, Object>> cacheConfigurations = new HashMap<>();
        Map<String, Object> config = new HashMap<>();
        config.put("key", "value");
        cacheConfigurations.put(Mockito.mock(Class.class), config);
        halRelationCacheConfiguration.setCacheConfigurations(cacheConfigurations);
        assertEquals(cacheConfigurations, halRelationCacheConfiguration.getCacheConfigurations());
    }

    @Test
    public void testSetCacheConfigurations_EmptyInput() {
        Map<Class<?>, Map<String, Object>> cacheConfigurations = new HashMap<>();
        halRelationCacheConfiguration.setCacheConfigurations(cacheConfigurations);
        assertEquals(cacheConfigurations, halRelationCacheConfiguration.getCacheConfigurations());
    }

    @Test
    public void testSetCacheConfigurations_NullInput() {
        halRelationCacheConfiguration.setCacheConfigurations(null);
        assertNull(halRelationCacheConfiguration.getCacheConfigurations());
    }
}
