// Test generated by RoostGPT for test camuda-engine-test using AI Type Open AI and AI Model gpt-4

package org.camunda.bpm.engine.rest.hal;

import org.camunda.bpm.engine.ProcessEngine;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

import java.net.URI;
import java.util.Map;
import java.util.TreeMap;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.when;

public class HalResource_get_links_0951274914_Test {

    @Mock
    private ProcessEngine processEngine;

    private HalResource halResource;

    @BeforeEach
    public void setup() {
        MockitoAnnotations.initMocks(this);
        halResource = new HalResource(processEngine);
    }

    @Test
    public void testGetLinksWhenLinksArePresent() {
        Map<String, HalLink> mockLinks = new TreeMap<>();
        mockLinks.put("self", new HalLink(URI.create("/test/self")));
        mockLinks.put("next", new HalLink(URI.create("/test/next")));

        when(processEngine.get_links()).thenReturn(mockLinks);

        Map<String, HalLink> links = halResource.get_links();

        assertEquals(mockLinks, links);
    }

    @Test
    public void testGetLinksWhenLinksAreEmpty() {
        Map<String, HalLink> mockLinks = new TreeMap<>();

        when(processEngine.get_links()).thenReturn(mockLinks);

        Map<String, HalLink> links = halResource.get_links();

        assertEquals(mockLinks, links);
    }
}
