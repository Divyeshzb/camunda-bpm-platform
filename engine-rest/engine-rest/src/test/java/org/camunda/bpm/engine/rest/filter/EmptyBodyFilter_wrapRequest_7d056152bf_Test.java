// Test generated by RoostGPT for test camuda-engine-test using AI Type Open AI and AI Model gpt-4

package org.camunda.bpm.engine.rest.filter;

import javax.servlet.*;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletRequestWrapper;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.PushbackInputStream;
import java.io.InputStream;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

public class EmptyBodyFilter_wrapRequest_7d056152bf_Test {

    private EmptyBodyFilter emptyBodyFilter;
    private HttpServletRequest req;
    private PushbackInputStream requestBody;

    @BeforeEach
    public void setup() {
        emptyBodyFilter = new EmptyBodyFilter();
        req = mock(HttpServletRequest.class);
        requestBody = mock(PushbackInputStream.class);
    }

    @Test
    public void testWrapRequest_WhenBodyIsEmpty() throws IOException {
        HttpServletRequestWrapper wrappedRequest = emptyBodyFilter.wrapRequest(req, true, requestBody);

        assertNotNull(wrappedRequest.getInputStream());
        assertNotNull(wrappedRequest.getReader());
    }

    @Test
    public void testWrapRequest_WhenBodyIsNotEmpty() throws IOException {
        HttpServletRequestWrapper wrappedRequest = emptyBodyFilter.wrapRequest(req, false, requestBody);

        assertNotNull(wrappedRequest.getInputStream());
        assertNotNull(wrappedRequest.getReader());
    }
}
