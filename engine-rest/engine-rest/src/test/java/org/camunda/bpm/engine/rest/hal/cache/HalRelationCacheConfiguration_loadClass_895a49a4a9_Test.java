// Test generated by RoostGPT for test camunda-new using AI Type Open AI and AI Model gpt-4

package org.camunda.bpm.engine.rest.hal.cache;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class HalRelationCacheConfiguration_loadClass_895a49a4a9_Test {

    private HalRelationCacheConfiguration halRelationCacheConfiguration;

    @BeforeEach
    public void setUp() {
        halRelationCacheConfiguration = new HalRelationCacheConfiguration();
    }

    @Test
    public void testLoadClass_Success() {
        // TODO: Replace with a valid class name
        String className = "java.lang.String";
        Class<?> result = halRelationCacheConfiguration.loadClass(className);
        assertEquals(className, result.getName());
    }

    @Test
    public void testLoadClass_ClassNotFound() {
        // TODO: Replace with an invalid class name
        String className = "invalid.ClassName";
        Exception exception = assertThrows(HalRelationCacheConfigurationException.class, () -> {
            halRelationCacheConfiguration.loadClass(className);
        });
        String expectedMessage = "Unable to load class of cache configuration " + className;
        String actualMessage = exception.getMessage();
        assertTrue(actualMessage.contains(expectedMessage));
    }
}
