// Test generated by RoostGPT for test camuda-engine-test using AI Type Open AI and AI Model gpt-4

package org.camunda.bpm.engine.rest.exception;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mockito;
import org.springframework.boot.test.context.SpringBootTest;

import javax.ws.rs.WebApplicationException;
import javax.ws.rs.core.Response;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.when;

@SpringBootTest
public class ExceptionHandlerHelper_getStatus_ac2dee8e7d_Test {

    private ExceptionHandlerHelper exceptionHandlerHelper;

    @BeforeEach
    public void setUp() {
        exceptionHandlerHelper = new ExceptionHandlerHelper();
    }

    @Test
    public void testGetStatus_ProcessEngineException() {
        ProcessEngineException exception = Mockito.mock(ProcessEngineException.class);
        Response.Status expectedStatus = Response.Status.INTERNAL_SERVER_ERROR;
        Response.Status actualStatus = exceptionHandlerHelper.getStatus(exception);
        assertEquals(expectedStatus, actualStatus);
    }

    @Test
    public void testGetStatus_RestException() {
        RestException exception = Mockito.mock(RestException.class);
        Response.Status expectedStatus = Response.Status.INTERNAL_SERVER_ERROR;
        Response.Status actualStatus = exceptionHandlerHelper.getStatus(exception);
        assertEquals(expectedStatus, actualStatus);
    }

    @Test
    public void testGetStatus_WebApplicationException() {
        WebApplicationException exception = Mockito.mock(WebApplicationException.class);
        Response mockResponse = Mockito.mock(Response.class);
        when(exception.getResponse()).thenReturn(mockResponse);
        when(mockResponse.getStatus()).thenReturn(400);
        Response.Status expectedStatus = Response.Status.BAD_REQUEST;
        Response.Status actualStatus = exceptionHandlerHelper.getStatus(exception);
        assertEquals(expectedStatus, actualStatus);
    }
}
