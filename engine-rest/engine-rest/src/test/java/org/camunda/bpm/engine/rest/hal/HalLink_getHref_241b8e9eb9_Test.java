// Test regenerated by RoostGPT for test camuda-engine-test using AI Type Open AI and AI Model gpt-4

package org.camunda.bpm.engine.rest.hal;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mockito;
import org.springframework.boot.test.context.SpringBootTest;

@SpringBootTest
public class HalLink_getHref_241b8e9eb9_Test {

    private HalLink halLink;

    @BeforeEach
    public void setup() {
        halLink = Mockito.mock(HalLink.class);
    }

    @Test
    public void testGetHref_WhenHrefIsNotNull() {
        // TODO: Replace "validHref" with the actual href value you want to test
        String validHref = "validHref";
        Mockito.when(halLink.getHref()).thenReturn(validHref);

        String result = halLink.getHref();

        Assertions.assertEquals(validHref, result, "Href should match the expected value");
    }

    @Test
    public void testGetHref_WhenHrefIsNull() {
        Mockito.when(halLink.getHref()).thenReturn(null);

        String result = halLink.getHref();

        Assertions.assertNull(result, "Href should be null");
    }
}
