// Test generated by RoostGPT for test camuda-engine-test using AI Type Open AI and AI Model gpt-4

package org.camunda.bpm.engine.rest.exception;

import javax.ws.rs.core.Response;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.junit.jupiter.MockitoExtension;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;
import org.camunda.bpm.engine.rest.helper.ExceptionHandlerHelper;

@ExtendWith(MockitoExtension.class)
public class ExceptionLogger_log_a2da351d24_Test {

    @Mock
    private ExceptionHandlerHelper exceptionHandlerHelper;

    @InjectMocks
    private ExceptionLogger exceptionLogger;

    @BeforeEach
    public void setup() {
        exceptionLogger = new ExceptionLogger();
    }

    @Test
    public void testLogWithStatusCodeGreaterThanOrEqualTo500() {
        Throwable throwable = new RuntimeException("Test Exception");
        Response.Status status = Response.Status.INTERNAL_SERVER_ERROR;
        when(exceptionHandlerHelper.getInstance().getStatus(throwable)).thenReturn(status);

        exceptionLogger.log(throwable);

        verify(exceptionLogger).logWarn(String.valueOf(status.getStatusCode()), exceptionLogger.getStackTrace(throwable));
    }

    @Test
    public void testLogWithStatusCodeLessThan500() {
        Throwable throwable = new RuntimeException("Test Exception");
        Response.Status status = Response.Status.BAD_REQUEST;
        when(exceptionHandlerHelper.getInstance().getStatus(throwable)).thenReturn(status);

        exceptionLogger.log(throwable);

        verify(exceptionLogger).logDebug(String.valueOf(status.getStatusCode()), exceptionLogger.getStackTrace(throwable));
    }
}
