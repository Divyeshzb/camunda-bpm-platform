// Test generated by RoostGPT for test camuda-engine-test using AI Type Open AI and AI Model gpt-4

package org.camunda.bpm.engine.rest.hal;

import static org.junit.Assert.assertEquals;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

import org.camunda.bpm.engine.ProcessEngine;
import org.camunda.bpm.engine.rest.hal.HalRelation;
import org.junit.Before;
import org.junit.Test;
import java.util.*;

public class HalLinker_createLink_3e8f7b539d_Test {

    private HalLinker halLinker;
    private HalRelation mockHalRelation;

    @Before
    public void setUp() {
        halLinker = new HalLinker();
        mockHalRelation = mock(HalRelation.class);
        when(mockHalRelation.relName).thenReturn("testRelName");
        when(mockHalRelation.uriTemplate.build((Object[]) any())).thenReturn("testUri");
    }

    @Test
    public void testCreateLink_Success() {
        String[] pathParams = {"param1", "param2"};
        halLinker.createLink(mockHalRelation, pathParams);
        Set<String> linkedResourceIds = halLinker.getLinkedResources().get(mockHalRelation);
        assertEquals(1, linkedResourceIds.size());
        assertEquals("param2", linkedResourceIds.iterator().next());
    }

    @Test
    public void testCreateLink_NullPathParams() {
        halLinker.createLink(mockHalRelation, null);
        Set<String> linkedResourceIds = halLinker.getLinkedResources().get(mockHalRelation);
        assertEquals(null, linkedResourceIds);
    }

    @Test
    public void testCreateLink_EmptyPathParams() {
        String[] pathParams = {};
        halLinker.createLink(mockHalRelation, pathParams);
        Set<String> linkedResourceIds = halLinker.getLinkedResources().get(mockHalRelation);
        assertEquals(null, linkedResourceIds);
    }

    @Test
    public void testCreateLink_NullFirstPathParam() {
        String[] pathParams = {null, "param2"};
        halLinker.createLink(mockHalRelation, pathParams);
        Set<String> linkedResourceIds = halLinker.getLinkedResources().get(mockHalRelation);
        assertEquals(null, linkedResourceIds);
    }
}
