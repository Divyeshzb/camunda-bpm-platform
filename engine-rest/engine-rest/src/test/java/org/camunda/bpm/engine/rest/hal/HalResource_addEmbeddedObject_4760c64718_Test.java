// Test generated by RoostGPT for test camuda-engine-test using AI Type Open AI and AI Model gpt-4

package org.camunda.bpm.engine.rest.hal;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeEach;
import org.mockito.Mockito;
import static org.junit.jupiter.api.Assertions.*;
import java.util.Map;
import java.util.TreeMap;

public class HalResource_addEmbeddedObject_4760c64718_Test {

    private HalResource halResource;
    private Map<String, Object> _embedded;

    @BeforeEach
    public void setup() {
        halResource = Mockito.spy(HalResource.class);
        _embedded = new TreeMap<>();
    }

    @Test
    public void testAddEmbeddedObject_EmptyMap() {
        String name = "testName";
        Object embedded = "testObject";

        halResource.addEmbeddedObject(name, embedded);

        assertEquals(1, _embedded.size());
        assertTrue(_embedded.containsKey(name));
        assertEquals(embedded, _embedded.get(name));
    }

    @Test
    public void testAddEmbeddedObject_NonEmptyMap() {
        String name = "testName";
        Object embedded = "testObject";
        _embedded.put("existingName", "existingObject");

        halResource.addEmbeddedObject(name, embedded);

        assertEquals(2, _embedded.size());
        assertTrue(_embedded.containsKey(name));
        assertEquals(embedded, _embedded.get(name));
    }

    @Test
    public void testAddEmbeddedObject_NullName() {
        String name = null;
        Object embedded = "testObject";

        assertThrows(NullPointerException.class, () -> {
            halResource.addEmbeddedObject(name, embedded);
        });
    }

    @Test
    public void testAddEmbeddedObject_NullObject() {
        String name = "testName";
        Object embedded = null;

        halResource.addEmbeddedObject(name, embedded);

        assertEquals(1, _embedded.size());
        assertTrue(_embedded.containsKey(name));
        assertNull(_embedded.get(name));
    }
}
