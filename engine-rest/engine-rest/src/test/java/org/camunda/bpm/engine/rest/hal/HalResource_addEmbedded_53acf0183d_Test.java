// Test generated by RoostGPT for test camuda-engine-test using AI Type Open AI and AI Model gpt-4

package org.camunda.bpm.engine.rest.hal;

import org.camunda.bpm.engine.ProcessEngine;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import java.net.URI;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;

import static org.mockito.Mockito.*;

public class HalResource_addEmbedded_53acf0183d_Test {

    @Mock
    private HalResource<?> halResourceMock;

    @Mock
    private Linker linkerMock;

    private HalResource<?> halResourceUnderTest;

    @BeforeEach
    public void setUp() {
        MockitoAnnotations.openMocks(this);
        halResourceUnderTest = new HalResource<>(linkerMock);
    }

    @Test
    public void testAddEmbedded_success() {
        String name = "testName";
        doNothing().when(linkerMock).mergeLinks(halResourceMock);
        halResourceUnderTest.addEmbedded(name, halResourceMock);
        verify(linkerMock, times(1)).mergeLinks(halResourceMock);
        verify(halResourceUnderTest, times(1)).addEmbeddedObject(name, halResourceMock);
    }

    @Test
    public void testAddEmbedded_nullName() {
        String name = null;
        doNothing().when(linkerMock).mergeLinks(halResourceMock);
        halResourceUnderTest.addEmbedded(name, halResourceMock);
        verify(linkerMock, times(1)).mergeLinks(halResourceMock);
        verify(halResourceUnderTest, times(1)).addEmbeddedObject(name, halResourceMock);
    }

    @Test
    public void testAddEmbedded_nullHalResource() {
        String name = "testName";
        HalResource<?> nullHalResource = null;
        halResourceUnderTest.addEmbedded(name, nullHalResource);
        verify(linkerMock, times(0)).mergeLinks(nullHalResource);
        verify(halResourceUnderTest, times(1)).addEmbeddedObject(name, nullHalResource);
    }
}
