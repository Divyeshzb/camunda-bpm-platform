// Test generated by RoostGPT for test camuda-engine-test using AI Type Open AI and AI Model gpt-4

package org.camunda.bpm.engine.rest.hal;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

public class Hal_getLinkResolver_c0a593cdd1_Test {

    @Mock
    private Map<Class<?>, HalLinkResolver> halLinkResolvers;

    @InjectMocks
    private HalResource halResource;

    @BeforeEach
    public void setUp() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testGetLinkResolver_WhenResourceClassExists() {
        HalLinkResolver expectedResolver = mock(HalLinkResolver.class);
        when(halLinkResolvers.get(any(Class.class))).thenReturn(expectedResolver);

        HalLinkResolver actualResolver = halResource.getLinkResolver(HalResource.class);

        assertEquals(expectedResolver, actualResolver);
    }

    @Test
    public void testGetLinkResolver_WhenResourceClassDoesNotExists() {
        when(halLinkResolvers.get(any(Class.class))).thenReturn(null);

        HalLinkResolver actualResolver = halResource.getLinkResolver(HalResource.class);

        assertNull(actualResolver);
    }
}
