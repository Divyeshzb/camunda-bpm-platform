// Test generated by RoostGPT for test camuda-engine-test using AI Type Open AI and AI Model gpt-4

package org.camunda.bpm.engine.rest.hal;

import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;
import static org.mockito.Mockito.mock;

import org.camunda.bpm.engine.rest.CaseDefinitionRestService;
import org.camunda.bpm.engine.rest.GroupRestService;
import org.camunda.bpm.engine.rest.IdentityRestService;
import org.camunda.bpm.engine.rest.ProcessDefinitionRestService;
import org.camunda.bpm.engine.rest.UserRestService;
import org.camunda.bpm.engine.rest.hal.caseDefinition.HalCaseDefinitionResolver;
import org.camunda.bpm.engine.rest.hal.group.HalGroupResolver;
import org.camunda.bpm.engine.rest.hal.identitylink.HalIdentityLinkResolver;
import org.camunda.bpm.engine.rest.hal.processDefinition.HalProcessDefinitionResolver;
import org.camunda.bpm.engine.rest.hal.user.HalUserResolver;
import org.junit.Before;
import org.junit.Test;
import org.mockito.Mockito;

public class Hal_Hal_b6b8e336dc_Test {

    private Hal hal;

    @Before
    public void setUp() {
        hal = new Hal();
    }

    @Test
    public void testHalInitialization() {
        assertNotNull(hal.halLinkResolvers.get(UserRestService.class));
        assertTrue(hal.halLinkResolvers.get(UserRestService.class) instanceof HalUserResolver);

        assertNotNull(hal.halLinkResolvers.get(GroupRestService.class));
        assertTrue(hal.halLinkResolvers.get(GroupRestService.class) instanceof HalGroupResolver);

        assertNotNull(hal.halLinkResolvers.get(ProcessDefinitionRestService.class));
        assertTrue(hal.halLinkResolvers.get(ProcessDefinitionRestService.class) instanceof HalProcessDefinitionResolver);

        assertNotNull(hal.halLinkResolvers.get(CaseDefinitionRestService.class));
        assertTrue(hal.halLinkResolvers.get(CaseDefinitionRestService.class) instanceof HalCaseDefinitionResolver);

        assertNotNull(hal.halLinkResolvers.get(IdentityRestService.class));
        assertTrue(hal.halLinkResolvers.get(IdentityRestService.class) instanceof HalIdentityLinkResolver);
    }

    @Test(expected = IllegalArgumentException.class)
    public void testHalInitializationWithInvalidArgument() {
        hal.halLinkResolvers.put(null, mock(HalUserResolver.class));
    }
}
