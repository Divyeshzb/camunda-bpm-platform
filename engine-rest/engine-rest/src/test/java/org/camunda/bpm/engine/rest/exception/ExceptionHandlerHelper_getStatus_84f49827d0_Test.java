// Test generated by RoostGPT for test camuda-engine-test using AI Type Open AI and AI Model gpt-4

package org.camunda.bpm.engine.rest.exception;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.assertEquals;
import org.camunda.bpm.engine.AuthorizationException;
import org.camunda.bpm.engine.BadUserRequestException;
import org.camunda.bpm.engine.ParseException;
import org.camunda.bpm.engine.ProcessEngineException;
import org.camunda.bpm.engine.migration.MigratingProcessInstanceValidationException;
import org.camunda.bpm.engine.migration.MigrationPlanValidationException;

import javax.ws.rs.core.Response;

public class ExceptionHandlerHelper_getStatus_84f49827d0_Test {

    @Test
    public void testGetStatusForAuthorizationException() {
        ProcessEngineException exception = new AuthorizationException("Test");
        Response.Status status = new ExceptionHandlerHelper().getStatus(exception);
        assertEquals(Response.Status.FORBIDDEN, status);
    }

    @Test
    public void testGetStatusForBadRequestException() {
        ProcessEngineException exception1 = new MigrationPlanValidationException("Test");
        Response.Status status1 = new ExceptionHandlerHelper().getStatus(exception1);
        assertEquals(Response.Status.BAD_REQUEST, status1);

        ProcessEngineException exception2 = new MigratingProcessInstanceValidationException("Test");
        Response.Status status2 = new ExceptionHandlerHelper().getStatus(exception2);
        assertEquals(Response.Status.BAD_REQUEST, status2);

        ProcessEngineException exception3 = new BadUserRequestException("Test");
        Response.Status status3 = new ExceptionHandlerHelper().getStatus(exception3);
        assertEquals(Response.Status.BAD_REQUEST, status3);

        ProcessEngineException exception4 = new ParseException("Test");
        Response.Status status4 = new ExceptionHandlerHelper().getStatus(exception4);
        assertEquals(Response.Status.BAD_REQUEST, status4);
    }

    @Test
    public void testGetStatusForOtherException() {
        ProcessEngineException exception = new ProcessEngineException("Test");
        Response.Status status = new ExceptionHandlerHelper().getStatus(exception);
        assertEquals(Response.Status.INTERNAL_SERVER_ERROR, status);
    }
}
